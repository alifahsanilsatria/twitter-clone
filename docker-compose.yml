services:
  postgresql:
    image: postgres:14.10
    container_name: postgresql
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - twitter_network
    healthcheck:  
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redisdata:/var/lib/redis/data
    command: /bin/sh -c "redis-server --requirepass ${REDIS_PASS}"
    networks:
      - twitter_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 2s
      retries: 10 
    restart: unless-stopped

  api-golang:
    image: api-golang
    container_name: backend
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - ${TWITTER_CLONE_DOCKER_COMPOSE_PORT}:${TWITTER_CLONE_DOCKER_COMPOSE_PORT}
    networks:
      - twitter_network
    restart: unless-stopped
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
      zipkin-collector:
        condition: service_healthy
    env_file:
      - .env

  zipkin-collector:
    image: openzipkin/zipkin-slim:latest
    container_name: zipkin-collector
    environment:
      - STORAGE_TYPE=elasticsearch
      # Point the zipkin at the storage backend
      - ES_HOSTS=http://zipkin-elasticsearch:9200
      # Uncomment to see requests to and from elasticsearch
      - ES_HTTP_LOGGING=BODY
       # Uncomment to increase heap size
      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
    ports:
      - "9411:9411"
    depends_on:
      zipkin-elasticsearch:
        condition: service_healthy
    networks:
      - twitter_network

  zipkin-elasticsearch:
    image: ghcr.io/openzipkin/zipkin-elasticsearch8:latest
    container_name: zipkin-elasticsearch
    volumes:
      - distributed-tracing-elastic-data:/elasticsearch
    ports:    
      - 9201:9200
    networks:
      - twitter_network

  logstash-elasticsearch:
    image: elasticsearch:7.17.18
    container_name: elasticsearch
    restart: always
    volumes:
      - distributed-log-elastic-data:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    healthcheck:
      test: ["CMD-SHELL", "echo 'Hello from elastic' || exit 1"]
      interval: 1s
      timeout: 2s
      retries: 10 
    ports:
      - 9202:9200
    networks:
      - twitter_network

  logstash:
    image: logstash:7.16.2
    container_name: logstash
    restart: always
    volumes:
      - ./logstash/:/logstash
      - /var/log:/var/log
    command: logstash -f /logstash/logstash.conf
    depends_on:
      logstash-elasticsearch:
        condition: service_healthy
    ports:
    - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m" 
    networks:
      - twitter_network

  kibana:
    image: kibana:7.16.2
    container_name: kibana
    restart: always       
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      logstash-elasticsearch:
        condition: service_healthy
    networks:
      - twitter_network
    
volumes:
  pgdata:
  redisdata:
  distributed-tracing-elastic-data:
  distributed-log-elastic-data:

networks:
  twitter_network: