services:
  postgresql:
    image: postgres:14.10
    container_name: postgresql
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - twitter_network
    healthcheck:  
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped


  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redisdata:/var/lib/redis/data
    command: /bin/sh -c "redis-server --requirepass ${REDIS_PASS}"
    networks:
      - twitter_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 2s
      retries: 10 
    restart: unless-stopped


  api-golang:
    image: api-golang
    container_name: backend
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - ${TWITTER_CLONE_DOCKER_COMPOSE_PORT}:${TWITTER_CLONE_DOCKER_COMPOSE_PORT}
    networks:
      - twitter_network
    restart: unless-stopped
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env

  zipkin-collector:
    image: openzipkin/zipkin-slim:latest
    ports:
      - "9411:9411"
    networks:
      - twitter_network

networks:
  twitter_network:
    
volumes:
  pgdata:
  redisdata:
